Recommender Systems: Collaborative Filtering Recommender Systems: Collaborative Filtering  ChengXiang Cheng Zhai Department of Computer Science University of Illinois at Urbana-Champaign  1   Recommender Systems: Collaborative Filtering  Small Relevant Data  User  11. Recommendation  2. Text Access  Recommender System  Search Engine  1. Natural Language Content Analysis  Big Text Data  3. Text Retrieval Problem  4. Text Retrieval Methods  5. Vector Space Model  6. System Implementation  7. Evaluation  8. Probabilistic Model  9. Feedback  10. Web Search  2  Basic Filtering Question: Will user U like item X?  Two different ways of answering it  Look at what items U likes, and then check if X is similar  Item similarity  => content-based filtering  Look at who likes X, and then check if U is similar  User similarity => collaborative filtering  Can be combined       What is Collaborative Filtering (CF)?  Making filtering decisions for an individual user based on the judgments of other users Inferring individuals interest/preferences from that of other similar users General idea  Given a user u, find similar users {u1, , um} Predict us preferences based on the preferences of u1, , um User similarity can be judged based on their similarity in preferences on a common set of items  4  CF: Assumptions  Users with the same interest will have similar preferences  Users with similar preferences probably share the same interest  Examples  interest is information retrieval => favor SIGIR papers  favor SIGIR papers => interest is information retrieval  Sufficiently large number of user preferences are available (if not, there will be a cold start problem)  5   The Collaboration Filtering Problem  Ratings  Objects: O  Users: U  o1       o2          oj       on  Xij=f(ui,oj)=?  u1 u2   ui ...  um  3           1.5    .                  2  2  1  ?  3  Unknown function f: U x O R  The task  Assume known f values for some (u,o)s Predict f values for other (u,o)s Essentially function approximation, like other learning problems  6             Memory-based Approaches  General ideas:  Xij: rating of object oj by user ui ni: average rating of all objects by user ui Normalized ratings: Vij = Xij  ni Prediction of rating of object oj by user ua  Specific approaches differ in w(a,i) -- the distance/similarity between user ua and ui  7  11(,)1/(,)mmajijajajaiivkwaivxvnkwai  User Similarity Measures  Pearson correlation coefficient (sum over commonly rated items)  Cosine measure  Many other possibilities!  8  jiijjaajjiijaajpnxnxnxnxiaw22)()())((),(njijnjajnjijajcxxxxiaw12121),(    Improving User Similarity Measures  Dealing with missing values: set to default ratings (e.g., average ratings) Inverse User Frequency (IUF): similar to IDF  9  Summary of Recommender Systems  Filtering/Recommendation is easy  The user s expectation is low Any recommendation is better than none  Filtering is hard  Must make a binary decision, though ranking is also possible Data sparseness (limited feedback information) Cold start (little information about users at the beginning)  Content-based vs. Collaborative filtering vs. Hybrid Recommendation can be combined with search   Push + Pull Many advanced algorithms have been proposed to use more context information and advanced machine learning  10   Additional Readings  Francesco Ricci, Lior Rokach, Bracha Shapira, Paul B. Kantor: Recommender Systems Handbook. Springer 2011. http://www.cs.bme.hu/nagyadat/Recommender_syste ms_handbook.pdf  11 
