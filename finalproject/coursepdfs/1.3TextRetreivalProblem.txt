Text Retrieval Problem Text Retrieval Problem  ChengXiang Cheng Zhai Department of Computer Science University of Illinois at Urbana-Champaign  1   Course Schedule  Small Relevant Data  User  11. Recommendation  2. Text Access  Recommender System  Search Engine  1. Natural Language Content Analysis  3. Text Retrieval Problem  4. Text Retrieval Methods  5. Vector Space Model  6. System Implementation  7. Evaluation  8. Probabilistic Model  9. Feedback  10. Web Search  Big Text Data  2  Overview  What is Text Retrieval? Text Retrieval vs. Database Retrieval Document Selection vs. Document Ranking  3  What Is Text Retrieval (TR)?  Collection of text documents exists User gives a query to express the information need Search engine system returns relevant documents to users Often called information retrieval (IR), but IR is actually much broader Known as search technology in industry  4  TR vs. Database Retrieval  Information  Unstructured/free text vs. structured data Ambiguous vs. well-defined semantics  Query  Ambiguous vs. well-defined semantics Incomplete vs. complete specification  Answers  Relevant documents vs. matched records  TR is an empirically defined problem  Cant mathematically prove one method is better than another Must rely on empirical evaluation involving users!  5  Formal Formulation of TR  Vocabulary: V={w1, w2, , wN} of language Query: q = q1,,qm, where qi  V Document: di = di1,,dimi, where dij  V Collection: C= {d1, , dM} Set of relevant documents: R(q)  C Generally unknown and user-dependent Query is a hint on which doc is in R(q) Task = compute R(q), an approximation of R(q)  6  How to Compute R(q)  Strategy 1: Document selection  R(q)={dC|f(d,q)=1}, where f(d,q) {0,1} is an indicator function or binary classifier System must decide if a doc is relevant or not (absolute relevance)  Strategy 2: Document ranking  R(q) = {dC|f(d,q)>}, where f(d,q)  is a relevance measure function;  is a cutoff determined by the user System only needs to decide if one doc is more likely relevant than another (relative relevance)  7   Document Selection vs. Ranking  True R(q)  + + - - - -  - - + - - + + - - - - -  - - -  Doc Selection f(d,q)=?  Doc Ranking f(d,q)=?  1  0  + +  - - + + +  R(q)  - - - - +  - - - - -  0.98 d1 + 0.95 d2 + 0.83 d3 - 0.80 d4 + 0.76 d5 - 0.56 d6 - 0.34 d7 - 0.21 d8 +  R(q)  8  Problems of Document Selection  The classifier is unlikely accurate  Over-constrained query  no relevant documents to return Under-constrained query  over delivery Hard to find the right position between these two extremes  Even if it is accurate, all relevant documents are not equally relevant (relevance is a matter of degree!)  Prioritization is needed  Thus, ranking is generally preferred  9  Theoretical Justification for Ranking  Probability Ranking Principle [Robertson 77]: Returning a ranked list of documents in descending order of probability that a document is relevant to the query is the optimal strategy under the following two assumptions: The utility of a document (to a user) is independent of the utility of any other document A user would browse the results sequentially Do these two assumptions hold?  10   Summary  Text retrieval is an empirically defined problem  Which algorithm is better must be judged by users  Document ranking is generally preferred to  Help users prioritize examination of search results Bypass the difficulty in determining absolute relevance (users help decide the cutoff on the ranked list)  Main challenge: design an effective ranking function f(q,d) =?  11   Additional Readings  S.E. Robertson, The probability ranking principle in IR. Journal of Documentation 33, 294-304, 1977 C. J. van Rijsbergen, Information Retrieval,  2nd Edition, Butterworth-Heinemann, Newton, MA, USA, 1979 A must-read for anyone doing research in information retrieval. Chapter 6 has an in-depth discussion of PRP.  12 
